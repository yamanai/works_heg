var path = require('path')
var webpack = require('webpack')
var autoprefixer = require('autoprefixer')
var precss = require('precss');
var HtmlWebpackPlugin = require('html-webpack-plugin');
const ExtractTextPlugin = require("extract-text-webpack-plugin");
module.exports = {
  entry: {
    app:['babel-polyfill', './src/main.js'],
    // index: './src/index/index.js',
  },
  output: {
    path: path.resolve(__dirname, './dist'),
    publicPath: '/dist/',
    filename: 'js/[name].js',
  },
  module: {
    rules: [
      {
        test: /\.vue$/,
        loader: 'vue-loader',
        options:{
          
        }
      },
      {
        test: /\.js$/,
        loader: 'babel-loader',
        exclude: /node_modules/
      },
      {
        test:/\.(css|less)$/,
        use:[
          {
            loader:"style-loader"
          },
          {
            loader:"css-loader",
            options:{
              importLoaders:1,
            }
          },
          {
            loader:'postcss-loader'
          },
          {
            loader:"less-loader",
            options:{
              importLoaders:1,
            }
          },
        ]
      },
      {
        test:/\.(eot|svg|ttf|woff|woff2)$/,
        loader:'file-loader'
      },
      {
        test: /\.(png|jpg|gif|svg)$/,
        loader: 'file-loader',
        options: {
          name: 'images/[hash].[ext]'
        }
      }
    ]
  },
  resolve: {
    extensions: ['css', '.js', '.vue', '.less'],
    alias: {
      'vue$': 'vue/dist/vue.esm.js',
      'assets': path.resolve(__dirname, './src/assets'),
      'pages': path.resolve(__dirname,'./src/pages'),
      'models': path.resolve(__dirname, './src/models'),
      'components':path.resolve(__dirname, './src/components'),
      '$vuex': path.resolve(__dirname, './src/vuex'),
    }
  },
  devServer: {
    disableHostCheck: true,
    historyApiFallback: true,
    noInfo: true
  },
  performance: {
    hints: false
  },
  devtool: '#eval-source-map',
  plugins:[
    new webpack.LoaderOptionsPlugin({
      minimize: true
    }),

  ]
}

if (process.env.NODE_ENV === 'production') {
  module.exports.devtool = '#source-map'
  // http://vue-loader.vuejs.org/en/workflow/production.html
  module.exports.plugins = (module.exports.plugins || []).concat([
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: '"production"'
      }
    }),
    new webpack.optimize.UglifyJsPlugin({
      sourceMap: true,
      compress: {
        warnings: false
      }
    }),
  ])
}
