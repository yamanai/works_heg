<template>
	<div class="search">
		<head-top class="header">
			<img slot="left" :src="require('../../../../assets/images/flight-prev.png')" class="prev" @click="close">
			<div slot="title" class="title">Search</div>
			<div slot="right" class="set"></div>
		</head-top>
		<div class="search-cont">
			<div class="searchDepart" v-if="showDepart">
				<input type="text" v-model = "departAirportString" class="departInput" placeholder="Depart">
				<a v-show="departAirportString!=''" @click="departAirportString=''" id="to-close" href="javascript:"></a>
				<ul v-if='suitableDepartAirports.length != 0'>
					<li v-for="airport in suitableDepartAirports" @click="setDepartAirport(airport)">
						{{ getAirplineDescription(airport) }}
					</li>
				</ul>
			</div>
			<div class="searchArrive" v-else>
				<input type="text" v-model = "destinationAirportString" placeholder="Destination">
				<a v-show="destinationAirportString!=''" @click="destinationAirportString=''" id="to-close" href="javascript:"></a>
				<ul v-if='suitableDestinamtionAirports.length != 0'>
					<li v-for="airport in suitableDestinamtionAirports" @click="setDestiantionAirport(airport)">
						{{ getAirplineDescription(airport) }}
					</li>
				</ul>
			</div>
		</div>
	</div>
</template>
<script>
	import headTop from '../../../../components/head/head.vue' 
	import localAirportJson from '../city.json'
	import { Airport } from '../../../../models/airport'
	import { AirportSearcher, CookieUtil, SHA2Util,GetFlightOrderUtil} from '../../../../models/utils'

	 function loadLocalStoragedAirorts() {
        let res = [];
        for (let a of localAirportJson) {
            res.push(Airport.getInstanceFromJson(a))
        }
        return res;
    }

    function getAirpotByAitaCode(code) {
        let des;
        for (let a of _airports) {
            if (a.iataCode == code) {
                des = a;
            }
        }
        return des
    }
    let _airports = loadLocalStoragedAirorts()
    let _airportSearcher = new AirportSearcher(_airports)

	export default{
		props:{
			showDepart:{
				type:Boolean
			}
		},
		components:{
			headTop
		},
		data(){
			return {
				closeSearch:false,
				departAirportString: '' ,
				destinationAirportString:'',
			}
		},
		methods:{
			close(){
				this.$emit('closeS')
			},
			 setDepartAirport(airport) {
                this.$emit("getDepartAirport",airport,this.closeSearch)
                this.departAirportString = '';
            },
            setDestiantionAirport(airport){
            	this.$emit("getArriveAirport",airport,this.closeSearch)
            	this.destinationAirportString = '';
            },
            getAirplineDescription(airport) {
                return airport.iataCode + ', ' + airport.cityName + ', ' + airport.countryName 
            },
		},
//        directives: {
//            focus: {
//                this.$el.depart.focus();
//            }
//        },
		computed:{
			suitableDepartAirports() {
                let res = _airportSearcher.getSuitableAirports(this.departAirportString)
                return res
            },
            suitableDestinamtionAirports() {
                return _airportSearcher.getSuitableAirports(this.destinationAirportString)
            },
		},
		mounted(){
		    $('.departInput').focus();
		}
	}
</script>
<style lang='less' scoped>
	.header{
		background:#f7f7f8;
		border-bottom:1px solid #ccc;
		.title{
			line-height:2.04rem;
			font-size:0.768rem;
			color:#000;
		}
	}
	.search-cont{
		padding:0 0.52rem;
		position:relative;
		top:2.4rem;
		.searchDepart,.searchArrive{
			a{
		        display:block!important;
		        position:absolute;
		        right:0.8rem;
		        top:0.8rem;
		        background:url('../../../../assets/images/close.png') center no-repeat;
		        background-size:0.6rem;
		        width:0.68rem;
		        height:0.68rem;
		        z-index:20;
		    }
		}
		input{
			width:100%;
			height:1.8rem;
			font-size:0.68rem;
			border:1px solid #ccc;
			background-color:#eee;
		}
		ul{
			height:12rem;
			position:absolute;
			top:1.8rem;
			overflow:auto;
			li{
				border-bottom:1px solid #eee;
				font-size:0.68rem;
				color:#666;
				text-align:left;
				padding:0.4rem 0 0.4rem 1.2rem;
			}
		}
	}
</style>